class Solution{
    public List<Integer> largestDivisibleSubset(int[] nums){
        List<Integer> res=new ArrayList<>();
        int dp[]=new int[nums.length];
        int parent[]=new int[nums.length];
        Arrays.fill(parent,-1);
        Arrays.fill(dp,1);
        Arrays.sort(nums);
        int maxLen=1,maxIndex=0;
        for(int i=0;i<nums.length;i++){
            for(int j=0;j<i;j++){
                if(nums[i]%nums[j]==0 && dp[i]<dp[j]+1){
                    dp[i]=dp[j]+1;
                    parent[i]=j;
                }
            }
            if(dp[i]>maxLen){
                maxLen=dp[i];
                maxIndex=i;
            }
        }
        int cur=maxIndex;
        while(cur!=-1){
            res.add(nums[cur]);
            cur=parent[cur];
        }
        Collections.reverse(res);
        return res;
    }
}
