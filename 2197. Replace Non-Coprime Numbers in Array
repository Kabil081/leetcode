class Solution{
    public int gcd(int a,int b){
        while(b!=0){
            int t=a%b;
            a=b;
            b=t;
        }
        return a;
    }
    public List<Integer> replaceNonCoprimes(int[] nums){
        List<Integer> list=new ArrayList<>();
        Deque<Integer> stack=new ArrayDeque<>();
        for(int i:nums){
            while(!stack.isEmpty() && gcd(stack.peekLast(),i)>1){
                int num=stack.pollLast();
                i=(i/gcd(i,num))*num;
            }
            stack.addLast(i);
        }
        while(!stack.isEmpty()){
            list.add(stack.pollFirst());
        }
        return list;
    }
}
