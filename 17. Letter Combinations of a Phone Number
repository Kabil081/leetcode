class Solution{
    Map<Integer,List<String>> map=new HashMap<>();
    List<String> res=new ArrayList<>();
    public List<String> letterCombinations(String digits){
        if(digits==null || digits.length()==0) return new ArrayList<>();
        int ind=0;
        for(int i=2;i<=9;i++){
            List<String> characters=new ArrayList<>();
            int len=(i==7 || i==9)?4:3;
            for(int j=0;j<len;j++){
                characters.add(String.valueOf((char)(ind+'a')));
                ind++;
            }
            map.put(i,characters);
        }
        backtrack(digits,new StringBuilder(),0);
        return res;
    }
    public void backtrack(String digits,StringBuilder sb,int ind){
        if(ind==digits.length()){
            res.add(sb.toString());
            return;
        }
        List<String> cur=map.get(digits.charAt(ind)-'0');
        for(String str:cur){
            sb.append(str);
            backtrack(digits,sb,ind+1);
            sb.deleteCharAt(sb.length()-1);
        }
    }
}
