/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists){
        if(lists==null) return null;
        PriorityQueue<ListNode> minHeap=new PriorityQueue<>((a,b)->a.val-b.val);
        for(ListNode list:lists){
            if(list!=null){
                minHeap.add(list);
            }
        }
        ListNode dummy=new ListNode(0);
        ListNode res=dummy;
        while(!minHeap.isEmpty()){
            ListNode value=minHeap.poll();
            res.next=value;
            res=res.next;
            if(value.next!=null){
                minHeap.add(value.next);
            }
        }
        return dummy.next;
    }
}
