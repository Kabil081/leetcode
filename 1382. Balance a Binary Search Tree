/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<Integer> inorder=new ArrayList<>();
    public TreeNode balanceBST(TreeNode root) {
        in(root);
        return build(inorder,0,inorder.size()-1);
    }
    public void in(TreeNode root){
        if(root==null) return;
        in(root.left);
        inorder.add(root.val);
        in(root.right);
    }
    public TreeNode build(List<Integer>inorder,int start,int end){
        if(start>end){
            return null;
        }
        int mid=(start+end)/2;
        TreeNode node=new TreeNode(inorder.get(mid));
        node.left=build(inorder,start,mid-1);
        node.right=build(inorder,mid+1,end);
        return node;
    }
}
