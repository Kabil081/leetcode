class Solution {
    public int nearestExit(char[][] maze, int[] entrance) {
        Deque<int[]> queue=new ArrayDeque<>();
        int n=maze.length,m=maze[0].length;
        maze[entrance[0]][entrance[1]]='+';
        queue.addLast(new int[]{entrance[0],entrance[1],0});
        int dir[][]={{-1,0},{0,-1},{0,1},{1,0}};
        while(!queue.isEmpty()){
            int arr[]=queue.removeFirst();
            int i=arr[0],j=arr[1],steps=arr[2];
            for(int d[]:dir){
                int x=d[0]+i,y=d[1]+j;
                if(x<0 || y<0 || x>=n || y>=m || maze[x][y]=='+') continue;
                if(x==0 || y==0 || x==n-1 || y==m-1){
                    return steps+1;
                }
                queue.addLast(new int[]{x,y,steps+1});
                maze[x][y]='+';
            }
        }
        return -1;
    }
}
