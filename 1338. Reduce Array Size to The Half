void swap(int*a,int*b){
    int temp=*a;
    *a=*b;
    *b=temp;
}
void heapify(int arr[],int n,int i){
    int smallest=i,left=2*i+1,right=2*i+2;
    if(left<n && arr[left]<arr[smallest]){
        smallest=left;
    }
    if(right<n && arr[right]<arr[smallest]){
        smallest=right;
    }
    if(smallest!=i){
        swap(&arr[i],&arr[smallest]);
        heapify(arr,n,smallest);
    }
}
void heapsort(int arr[],int n){
    for(int i=n/2-1;i>=0;i--){
        heapify(arr,n,i);
    }
    for(int i=n-1;i>=0;i--){
        swap(&arr[i],&arr[0]);
        heapify(arr,i,0);
    }
}
int minSetSize(int* arr, int arrSize) {
    int*freq=(int*)calloc(100001,sizeof(int));
    for(int i=0;i<arrSize;i++){
        freq[arr[i]]++;
    }
    int freqArray[100001],unique=0;
    for(int i=0;i<100001;i++){
        if(freq[i]>0){
            freqArray[unique++]=freq[i];
        }
    }
    heapsort(freqArray,unique);
    int c=0,count=0;
    for(int i=0;i<arrSize;i++){
        c+=freqArray[i];
        count++;
        if(c>=arrSize/2){
            break;
        }
    }
    return count;
}
