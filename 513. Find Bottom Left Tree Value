/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int leftMostValue=0,maxDepth=0;
    public int findBottomLeftValue(TreeNode root) {
        if(root==null){
            return 0;
        }
        leftMostValue=root.val;
        dfs(root,0);
        return leftMostValue;
    }
    public void dfs(TreeNode root,int depth){
        if(root==null){
            return;
        }
        if(depth>maxDepth){
            maxDepth=depth;
            leftMostValue=root.val;    
        }
        dfs(root.left,depth+1);
        dfs(root.right,depth+1);
    }
}
