class Solution{
    class Pair{
        char ch;
        int count;
        Pair(char ch,int count){
            this.ch=ch;
            this.count=count;
        }
    }
    public String removeDuplicates(String s, int k){
        Deque<Pair> stack=new ArrayDeque<>();
        char arr[]=s.toCharArray();
        for(char ch:arr){
            if(!stack.isEmpty() && stack.peekLast().ch==ch){
                stack.peekLast().count++;
                if(stack.peekLast().count==k) stack.pollLast();
            }else{
                stack.addLast(new Pair(ch,1));
            }
        }
        StringBuilder sb=new StringBuilder();
        while(!stack.isEmpty()){
            int n=stack.peekFirst().count;
            char ch=stack.peekFirst().ch;
            for(int i=0;i<n;i++){
                sb.append(ch);
            }
            stack.pollFirst();
        }
        return sb.toString();
    }
}
