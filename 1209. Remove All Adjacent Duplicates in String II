class Solution{
    public String removeDuplicates(String s, int k){
        Deque<Character> stack=new ArrayDeque<>();
        Deque<Integer> stack_num=new ArrayDeque<>();
        int n=s.length();
        char arr[]=s.toCharArray();
        int count=0;
        for(char ch:arr){
            if(!stack.isEmpty() && stack.peekLast()==ch){
                if(stack_num.peekLast()==k-1){
                    while(!stack.isEmpty() && stack.peekLast()==ch){
                        stack.pollLast();
                        stack_num.pollLast();
                    }
                }else{
                    stack.addLast(ch);
                    stack_num.addLast(stack_num.peekLast()+1);
                }
            }else{
                stack.addLast(ch);
                stack_num.addLast(1);
            }
        }
        StringBuilder sb=new StringBuilder();
        while(!stack.isEmpty()){
            sb.append(stack.pollFirst());
        }
        return sb.toString();
    }
}
