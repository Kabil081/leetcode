class Solution {
    int m,n;
    public int dfs(int grid[][],int i,int j){
        if(i<0 || i>=m || j<0 || j>=n) return 0;
        if(grid[i][j]==0) return 0;
        int c=grid[i][j];
        grid[i][j]=0;
        return c+dfs(grid,i-1,j)+dfs(grid,i,j-1)+dfs(grid,i+1,j)+dfs(grid,i,j+1);
    }
    public int findMaxFish(int[][] grid){
        m=grid.length;
        n=grid[0].length;
        int res=0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                int cur=0;
                if(grid[i][j]>0){
                    cur=dfs(grid,i,j);
                    res=Math.max(res,cur);
                }
            }
        }
        return res;
    }
}
