class Solution{
    int parent[];
    public int makeConnected(int n, int[][] connections){
        int p=connections.length;
        if(p<n-1) return -1;
        parent=new int[n];
        for(int i=0;i<n;i++){
            parent[i]=i;
        }
        int count=n;
        for(int arr[]:connections){
            if(union(arr[0],arr[1])){
                count--;
            }
        }
        return count-1;
    }
    public int find(int x){
        if(parent[x]!=x){
            parent[x]=find(parent[x]);
        }
        return parent[x];
    }
    public boolean union(int a,int b){
        int rootA=find(a);
        int rootB=find(b);
        if(rootA!=rootB){
            parent[rootA]=rootB;
            return true;
        }
        return false;
    }
}
