class Solution {
    public int[] findRightInterval(int[][] intervals) {
        Map<Integer,Integer> map=new HashMap<>();
        int startArray[]=new int[intervals.length];
        for(int i=0;i<intervals.length;i++){
            map.put(intervals[i][0],i);
            startArray[i]=intervals[i][0];
        }
        Arrays.sort(startArray);
        int res[]=new int[intervals.length];
        for(int i=0;i<intervals.length;i++){
            res[i]=bsearch(intervals,i,startArray,map);
        }
        return res;
    }
    public int bsearch(int[][]intervals,int ind,int[]startArray,Map<Integer,Integer>map){
        if(intervals[ind][0]==intervals[ind][1]) return ind;
        int left=0,right=intervals.length-1;
        int res=-1;
        while(left<=right){
            int mid=left+(right-left)/2;
            if(startArray[mid]>=intervals[ind][1]){
                res=mid;
                right=mid-1;
            }else{
                left=mid+1;
            }
        }
        return res==-1?res:map.get(startArray[res]);
    }
}
