/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverse(ListNode root){
        ListNode prev=null,cur=root,next1=null;
        while(cur!=null){
            next1=cur.next;
            cur.next=prev;
            prev=cur;
            cur=next1;
        }
        root=prev;
        return root;
    }
    public ListNode addTwoNumbers(ListNode l1, ListNode l2){
        ListNode list1=reverse(l1);
        ListNode list2=reverse(l2);
        ListNode dummy=new ListNode(0);
        ListNode list3=dummy;
        int rem=0;
        while(list1!=null || list2!=null){
            int sum=rem;
            if(list1!=null){
                sum+=list1.val;
                list1=list1.next;
            }
            if(list2!=null){
                sum+=list2.val;
                list2=list2.next;
            }
            list3.next=new ListNode(sum%10);
            list3=list3.next;
            rem=sum/10;
        }
        if(rem!=0){
            list3.next=new ListNode(rem);
        }
        return reverse(dummy.next);
    }
}
