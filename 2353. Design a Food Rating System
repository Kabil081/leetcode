class FoodRatings{
    Map<String,PriorityQueue<Pair>> cusi_map=new HashMap<>();
    Map<String,String> food_map=new HashMap<>();
    Map<String,Integer>food_rating=new HashMap<>();
    class Pair{
        String food;
        int rating;
        Pair(String food,int rating){
            this.food=food;
            this.rating=rating;
        }
    }
    public FoodRatings(String[] foods, String[] cuisines,int[] ratings){
        int n=foods.length;
        for (int i=0;i<n;i++){
            cusi_map.putIfAbsent(cuisines[i], new PriorityQueue<>((a, b)->{
                    if (b.rating != a.rating) return b.rating - a.rating;
                    return a.food.compareTo(b.food);  
                })
            );
            cusi_map.get(cuisines[i]).add(new Pair(foods[i],ratings[i]));
            food_map.put(foods[i], cuisines[i]);
            food_rating.put(foods[i],ratings[i]);
        }
    }
    public void changeRating(String food, int newRating){
        String cuisine=food_map.get(food);
        cusi_map.get(cuisine).add(new Pair(food,newRating));
        food_rating.put(food,newRating);
    }
    public String highestRated(String cuisine){
        PriorityQueue<Pair> pq=cusi_map.get(cuisine);
        while(!pq.isEmpty()){
            Pair p=pq.peek();
            int cur=food_rating.get(p.food);
            if(cur==p.rating) return p.food;
            pq.poll();
        }
        return "";
    }
}
