class Solution{
    public int countIslands(int[][] grid, int k){
        int row=grid.length,col=grid[0].length;
        boolean visited[][]=new boolean[row][col];
        int islands=0;
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(visited[i][j] || grid[i][j]==0) continue;
                if(dfs(grid,visited,i,j,0) % k==0) islands++;
            }
        }
        return islands;
    }
    public int dfs(int [][]grid,boolean visited[][],int i,int j,int sum){
        if(i<0 || j<0 || i>=grid.length || j>=grid[0].length || visited[i][j] || grid[i][j]==0) return 0;
        visited[i][j]=true;
        sum+=dfs(grid,visited,i-1,j,0);
        sum+=dfs(grid,visited,i+1,j,0);
        sum+=dfs(grid,visited,i,j-1,0);
        sum+=dfs(grid,visited,i,j+1,0);
        return sum+grid[i][j];
    }
}
