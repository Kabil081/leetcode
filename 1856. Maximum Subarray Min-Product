class Solution {
    public int maxSumMinProduct(int[] nums) {
        Deque<Integer> stack=new ArrayDeque<>();
        int n=nums.length;
        int prev[]=new int[n];
        int next[]=new int[n];
        Arrays.fill(next,n);
        int mod=1000000007;
        long prefix[]=new long[n+1];
        for(int i=0;i<n;i++){
            prefix[i+1]=prefix[i]+nums[i];
        }
        for(int i=0;i<n;i++){
            while(!stack.isEmpty() && nums[stack.peek()]>=nums[i]){
                next[stack.pop()]=i;
            }
            prev[i]=stack.isEmpty()?-1:stack.peek();
            stack.push(i);
        }
        long max=0;
        for(int i=0;i<n;i++){
            int left=prev[i]+1;
            int right=next[i];
            long sum=nums[i] * (prefix[right]-prefix[left]);
            max=Math.max(max,sum);
        }
        return (int)(max % mod);
    }
}
