class Solution{
    public int maxTwoEvents(int[][] events){
        Arrays.sort(events,(a,b)->{
            if(a[0]==b[0]) return a[1]-b[1];
            return a[0]-b[0];
        });
        int n=events.length;
        int suffix_max[]=new int[n];
        suffix_max[n-1]=events[n-1][2];
        for(int i=n-2;i>=0;i--){
            suffix_max[i]=Math.max(suffix_max[i+1],events[i][2]);
        }
        int ans=-1;
        for(int i=0;i<n;i++){
            int idx=bsearch(events[i][1],i+1,n-1,events);
            if(idx==-1) ans=Math.max(events[i][2],ans);
            else ans=Math.max(events[i][2]+suffix_max[idx],ans);
        }
        return ans;
    }
    public int bsearch(int end,int left,int right,int arr[][]){
        int ans=-1;
        while(left<=right){
            int mid=left+(right-left)/2;
            if(arr[mid][0]>end){
                ans=mid;
                right=mid-1;
            }else{
                left=mid+1;
            }
        }
        return ans;
    }
}
