class Solution {
    public int minZeroArray(int[] nums, int[][] queries) {
        if(!isZeroArray(nums.clone(), queries, queries.length)) return -1;
        int left = 0, right = queries.length, ans = -1; 
        while (left <= right){
            int mid = (left + right) / 2;
            if (isZeroArray(nums, queries, mid)) {
                ans = mid;
                right = mid - 1;
            } else {
                left = mid + 1; 
            }
        }
        return ans;
    }
    public boolean isZeroArray(int[] nums, int[][] queries, int mid) {
        int n = nums.length;
        int diff[] = new int[n + 1]; 
        for (int i = 0; i < mid; i++) {
            int l = queries[i][0], r = queries[i][1], v = queries[i][2];
            diff[l] -= v; 
            if (r + 1 < n) diff[r + 1] += v;  
        }
        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += diff[i];
            if (nums[i] + sum > 0) return false;  
        }
        return true;
    }
}
