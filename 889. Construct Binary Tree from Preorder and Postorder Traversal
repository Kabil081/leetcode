/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int pos[];
    int index=0;
    public TreeNode constructFromPrePost(int[] preorder, int[] postorder) {
        int n=postorder.length;
        pos=new int[n+1];
        for(int i=0;i<n;i++) pos[postorder[i]]=i;
        return build(preorder,0,n-1);
    }
    public TreeNode build(int[]preorder,int start,int end){
        if(start>end) return null;
        TreeNode root=new TreeNode(preorder[index++]);
        if(start==end) return root;
        int mid=pos[preorder[index]];
        root.left=build(preorder,start,mid);
        root.right=build(preorder,mid+1,end-1);
        return root;
    }
}
