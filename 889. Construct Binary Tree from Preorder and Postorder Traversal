/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int index=0;
    public TreeNode constructFromPrePost(int[] preorder, int[] postorder){
        Map<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<postorder.length;i++){
            map.put(postorder[i],i);
        }
        return build(preorder,0,preorder.length-1,map);
    }
    public TreeNode build(int preorder[],int start,int end,Map<Integer,Integer> map){
        if(start>end){
            return null;
        }
        TreeNode root=new TreeNode(preorder[index++]);
        if(start==end){
            return root;
        }
        int i=map.get(preorder[index]);
        root.left=build(preorder,start,i,map);
        root.right=build(preorder,i+1,end-1,map);
        return root;
    }
}
