class Solution {
    int parent[];
    public boolean validPath(int n, int[][] edges, int source, int destination) {
        parent=new int[n];
        for(int i=0;i<n;i++){
            parent[i]=i;
        }
        for(int edge[]:edges){
            union(edge[0],edge[1]);
        }
        return find(source)==find(destination);
    }
    public int find(int x){
        if(parent[x]!=x){
            parent[x]=find(parent[x]);
        }
        return parent[x];
    }
    public void union(int x,int y){
        int rootX=find(x);
        int rootY=find(y);
        if(rootX!=rootY){
            if(rootX<rootY){
                parent[rootY]=rootX;
            }else if(rootX>rootY){
                parent[rootX]=rootY;
            }
        }
    }
}
