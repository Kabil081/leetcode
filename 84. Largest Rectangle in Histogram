class Solution {
    public int largestRectangleArea(int[] heights) {
        Stack<Integer> stack=new Stack<>();
        int n=heights.length;
        int prev[]=new int[n];
        int next[]=new int[n];
        for(int i=0;i<n;i++){
            while(!stack.isEmpty() && heights[stack.peek()]>=heights[i]){
                stack.pop();
            }
            prev[i]=stack.isEmpty()?-1:stack.peek();
            stack.push(i);
        }
        stack.clear();
        for(int i=n-1;i>=0;i--){
            while(!stack.isEmpty() && heights[stack.peek()]>heights[i]){
                stack.pop();
            }
            next[i]=stack.isEmpty()?n:stack.peek();
            stack.push(i);
        }
        int max=0,ele=0;
        for(int i=0;i<n;i++){
            int p=prev[i]==-1?0:prev[i]+1;
            max=Math.max(max,heights[i]*(next[i]-p));
        }
        return max;
    }
}
