class Solution {
    List<List<Integer>> res=new ArrayList<>();
    public List<List<Integer>> combinationSum3(int k, int n) {
        backtrack(k,n,new ArrayList<>(),1);
        return res;
    }
    public void backtrack(int size,int target,List<Integer> list,int ind){
        if(list.size()==size && target==0){
            res.add(new ArrayList<>(list));
            return;
        }
        if(list.size()>size) return;
        for(int i=ind;i<=9;i++){
            if(target-i>=0){
                list.add(i);
                backtrack(size,target-i,list,i+1);
                list.remove(list.size()-1);
            }
        }
        return;
    }
}
